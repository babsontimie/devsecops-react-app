apiVersion: v1
kind: Namespace
metadata:
  name: react-app-ns

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-app
  namespace: react-app-ns
  labels:
    app: react-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: react-app
  template:
    metadata:
      labels:
        app: react-app
    spec:
      # Pod-level security context
      securityContext:
        runAsUser: 1000      # High UID
        runAsGroup: 3000
        fsGroup: 2000
      automountServiceAccountToken: false
      containers:
        - name: react-app
          # Use immutable image by digest
          image: ghcr.io/<org>/<repo>@sha256:<digest>
          ports:
            - containerPort: 80
          # Container-level security context
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          # Resource requests & limits
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
          # Liveness and Readiness probes
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: react-app-network
  namespace: react-app-ns
spec:
  podSelector:
    matchLabels:
      app: react-app
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  egress: []
